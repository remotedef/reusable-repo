# .github/workflows/build-and-push-docker.yml
name: Build and Push Docker Image to GCP Artifact Registry

on:
  workflow_call:  # Allow this workflow to be reusable
    inputs:
      docker_image_name:
        required: true
        type: string
      docker_tag:
        required: true
        type: string
    secrets:
      GCP_PROJECT_ID:
        required: true
      GCP_REGION:
        required: true
      GCP_GITHUB_TOEKN:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        
      # Step 1: Authenticate with Google Cloud using Workload Identity Federation
      - name: Set up authentication for GCP using Workload Identity Federation
        uses: google-github-actions/auth@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_GITHUB_TOEKN }}  # Use GitHub token for WIF authentication
          federated_credentials: 'projects/${{ secrets.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-oidc-provider'  # Federated credentials path

      # Step 2: Set up Google Cloud SDK (gcloud)
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'kubectl'  # You can install other components as needed

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ inputs.docker_image_name }}:${{ inputs.docker_tag }} .  

      # Step 4: Push Docker image to Artifact Registry
      - name: Push Docker Image to Artifact Registry
        run: |
          # Set the correct GCP Artifact Registry repository
          gcloud auth configure-docker ${{ secrets.GCP_REGION}}-docker.pkg.dev --quiet
          docker tag ${{ inputs.docker_image_name }}:${{ inputs.docker_tag }} ${{ secrets.GCP_REGION}}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/${{ inputs.docker_image_name }}:${{ inputs.docker_tag }}
          docker push ${{ secrets.GCP_REGION}}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/${{ inputs.docker_image_name }}:${{ inputs.docker_tag }}

