name: Build and Push Docker Image to GCP Artifact Registry

on:
  push:
    branches:
      - main  # Trigger when pushing to the main branch
  #workflow_call:  # Allow this workflow to be reusable
    #inputs:
      #docker_image_name:
        #required: true
        #type: string
      #docker_tag:
        #required: true
        #type: string
    #secrets:
      #GCP_PROJECT_ID:
        #required: true
      #GCP_REGION:
        #required: true
      #GCP_GITHUB_TOKEN:
        #required: true
      
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      # Step 1: Authenticate to GCP using Workload Identity Federation
      - name: Authenticate to GCP using Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          #project_id: ${{ secrets.GCP_PROJECT_ID }}
          #workload_identity_provider: 'projects/894328320839/locations/global/workloadIdentityPools/github-actions-pool/providers/github-oidc-provider'
          #service_account: 'github-sa@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com'
          #audience: 'https://iam.googleapis.com/'

      # Step 2: Set up Google Cloud CLI
      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'gcloud'

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ inputs.docker_image_name }}:${{ inputs.docker_tag }} .

      # Step 4: Push Docker Image to Artifact Registry
      - name: Push Docker Image to Artifact Registry
        run: |
          # Set the correct GCP Artifact Registry repository
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet
          docker tag my-app:latest ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/my-app:latest
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/my-app:latest
          #docker tag ${{ inputs.docker_image_name }}:${{ inputs.docker_tag }} ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/${{ inputs.docker_image_name }}:${{ inputs.docker_tag }}
          #docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-repo/${{ inputs.docker_image_name }}:${{ inputs.docker_tag }}
            
